common: &common
  app_name: Atreides
  admin_email:
  session_key: '_dummy_web_app_session'
  analytics_backends:
    - console
    - google
  ganalytics:
    code:
    email:
    password:
    profile_id:
  domain: atreides.rails
  tumblr:
    blog:
    email:
    pass:
  dropbox:
    key:
    secret:
  vimeo:
    consumer_key:
    consumer_secret:
    user_token:
    user_secret:
  facebook:
    # GoTo:
    # http://graph.facebook.com/oauth/authorize?client_id=632c768327fd8d5ec7a55b2364424abe&redirect_uri=http://kanonvodka.rails
    # -> Get code param and save as the token
    # GoTo:
    #   https://graph.facebook.com/oauth/access_token?client_id=632c768327fd8d5ec7a55b2364424abe&redirect_uri=http://kanonvodka.rails/&client_secret=ad83f27037cc74cb3c242557276753a1&code=e56edc612fdf770e2a35a610-666591162%7CxYP-8UFDcOKMeeZsWAcd7ybXhrk.
    # -> Put resulting access_token into user_token val below
    # -> Create a OAuth access_token object with: access_token = OAuth2::AccessToken.new(client, Settings.facebook.user_token)
    # -> Get your page's access_token with: access_token.get("/me/accounts")
    # -> Put the page's access_token into page_token below
    secret_key:
    api_key:
    code:
    user_token:
    page_token:
    page_id:
    app_id:
  twitter:
    login:
    consumer_key:
    consumer_secret:
    # oauth = Twitter::OAuth.new(Settings.twitter.consumer_key, Settings.twitter.consumer_secret, :sign_in => true)
    # oauth.set_callback_url(app.root_url(:host => Settings.domain))
    # rtoken  = oauth.request_token.token
    # rsecret = oauth.request_token.secret
    # oauth.request_token.authorize_url
    # -- Go to above URL and sign-in/approve the app and retrieve the verifier param from the return-to-app URL
    # oauth_verifier = "0aRHi5UAGWoxfyaa0iMnUYNC3nUXF5gIIzjtxyauc58"
    # oauth.authorize_from_request(rtoken, rsecret, oauth_verifier)
    # oauth.access_token.token -> use below
    # oauth.access_token.secret -> use below
    app_user_token:
    app_user_secret:
    search_for: atreides
  vimeo:
    consumer_key:
    consumer_secret:
    user_token:
    user_secret:
  bitly:
    login:
    key:
  tags:
    posts:
      groups: [tags, location]
      tags: []
      location: [blog, featured]
      features: [home, blog]
    features:
      groups: [home, blog]
    pages:
      groups: []
  photo_conv_options: "-density 70 -quality 70"
  photo_dimensions:
    thumb: "100x100#"
    small: "156x156#"
    splash: "940x380#"
    list: "670x120#"
    medium: "670x670>"
    full: "2000x2000>"

development:
  <<: *common

test:
  <<: *common

staging:
  <<: *common
  domain: atreides.lovethe88.com

production:
  <<: *common
  ganalytics:
    code:
    profile_id:
  domain: atreides.com
  facebook:
    # GoTo:
    # http://graph.facebook.com/oauth/authorize?client_id=632c768327fd8d5ec7a55b2364424abe&redirect_uri=http://kanonvodka.rails
    # -> Get code param and save as the token
    # GoTo:
    #   https://graph.facebook.com/oauth/access_token?client_id=632c768327fd8d5ec7a55b2364424abe&redirect_uri=http://kanonvodka.rails/&client_secret=ad83f27037cc74cb3c242557276753a1&code=e56edc612fdf770e2a35a610-666591162%7CxYP-8UFDcOKMeeZsWAcd7ybXhrk.
    # -> Put resulting access_token into user_token val below
    # -> Create a OAuth access_token object with: access_token = OAuth2::AccessToken.new(client, Settings.facebook.user_token)
    # -> Get your page's access_token with: access_token.get("/me/accounts")
    # -> Put the page's access_token into page_token below
    secret_key:
    api_key:
    code:
    user_token:
    page_token:
    page_id:
    app_id:
