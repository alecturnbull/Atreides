.comment.span-17{:id => "comment-#{comment.id}", :class => "#{'approved' if comment.isApproved}"}
  %label.span-1.comment-select.approved{:for => "check-#{comment.id}"}
    = check_box_tag "", nil, false, :id => "check-#{comment.id}"
    = hidden_field_tag "", comment.id
  / Excerpt block. This is shown by default and hidden when the parent is given the class "expanded"
  .comment-excerpt-block.span-16.last
    .comment-avatar
      = image_tag comment.author.avatar.cache, :class => "comment-avatar", :size => "32x32"
    .comment-excerpt
      %p
        %span.comment-name
          = comment.author.name
          %span
            = "(#{comment.author.email}):" unless comment.author.email.blank?
        %span.comment-body= comment.raw_message
    .comment-time
      Posted
      = distance_of_time_in_words seconds_from_now(Time.parse(comment.createdAt))
      ago.
    .clear
  / End excerpt block
  / hidden by default, shown by javascript when expanded.
  .comment-header{:style => "display:none"}
    .comment-user
      %a{:href => "#", :rel => "userlist"}
        = image_tag comment.author.avatar.cache, :class => "comment-avatar", :size => "32x32"
      .comment-name
        = link_to comment.author.name, comment.author.url, :class => "profile-launcher", "data-profile-username" => comment.author.username, :target => "_blank"
        %span
          != "(#{mail_to(comment.author.email)})" unless comment.author.email.blank?
        / %small
        /   = link_to "#{comment.ipAddress}.", "?query=ip:#{comment.ipAddress}"
        /   = link_to comment.author.url, comment.author.url, :target => "_blank"
    .comment-time
      Posted
      = distance_of_time_in_words seconds_from_now(Time.parse(comment.createdAt))
      ago.
    .clear
  / hidden by default, shown by javascript when expanded.
  .comment-body{:style => "display:none"}
    .content
      .content-wrapper
        %p= comment.raw_message
    .media
  / hidden by default, shown by javascript when expanded.
  .comment-footer.clear
    .comment-actions-left.span-12.prepend-1
      = ttc(".see_also")
      \:
      = link_to comment.author.email, "?query=email:#{comment.author.email}"
      = link_to comment.ipAddress, "?query=ip:#{comment.ipAddress}"
      = link_to tt(".this thread"), "?query=thread:#{comment.thread}"

  .comment-actions-left.span-4.last
    = ttc ".this comment is"
    %span.txt-approved= comment.isApproved ? tt('.approved') : tt('.not yet approved')
    %a.add-userlist.blacklist{:href => "#", :style => "display: none; "}
      = ttc ".add commenter to", :list => content_tag(:strong, "Blacklist")
    %a.add-userlist.whitelist{:href => "#", :style => "display: none; "}
      = ttc ".add commenter to", :list => content_tag(:strong, "Whitelist")
