/*
 * Atreides - Admin Behaviours
 *
 * Lachlan Laycock @ Le 88
 * 22 Feb 2010
 *
 * DO NOT EDIT THIS FILE!
 * CHANGES TO THIS FILE WILL BE LOST!
 *
 * Use admin.js for location modifactions
 *
 */

jQuery.fn.bindAll = function(options) {
  var $this = this;
  jQuery.each(options, function(key, val){
    $this.bind(key, val);
  });
  return this;
}

var pageChanged = false;

function hasPageChanged(){
  return pageChanged;
};

$(window).bind("beforeunload", function(){
  if(hasPageChanged()){
    return "You have unsaved changes on this page."
  }
});

$(document).ready(function() {

  $("input, textarea").not("input[name*='search'], input[name*='query']").bind("change", function(){
    pageChanged = true;
  });

  $("form").submit(function(){
    pageChanged = false;
    return true;
  });

  // Hide flash messages
  $("#flash").delay(2000).fadeOut('slow');

  var links = $('a')
  if (links.length) {
    links.click(function(e) {
      $(this).addClass('loading')
    })

    // Remove loading class to all links when AJAX finished - use CSS to style
    links.ajaxComplete(function(e) {
      $(this).removeClass('loading');
    })

    // Make external links open in new window
    reg = new RegExp("//"+window.location.host+"/");
    links.each(function(i, el) {
      if (!el.href.match(reg)) {
        var el = $(el);
        if (!el.attr('target')) {
          el.attr('target', '_blank')
        }
      }
    })
  }

  // Add behaviour to support attributes of data-submit. Must be using jquery-ujs as well.
  $('a[data-submit]').live('ajax:before', function(event) {
    submit_fields = $($(this).data('submit'))
    $(this).data('params', submit_fields.serialize())
  })

  // Date pickers
  if ((date_pickers = $(".date-picker input")).length) {
    date_pickers.datepicker({ dateFormat: 'dd/mm/yy' });
  }

  // Tag inputs
  if ((tag_textareas = $('.tag-picker textarea')).length) {
    tag_textareas.tags();
  }

  // Auto-hide fields
  auto_hides = $('.auto-hide-text input')
  if (auto_hides.length) {
    auto_hides.each(function(i, el) { $(el).attr('default',$(el).val()) })
    auto_hides.focus(function(e) {
      if ($(this).val()==$(this).attr('default')) $(this).val('')
      $(this).attr('style', 'color:#000');
    })
    auto_hides.blur(function(e) {
      if ($(this).val().length==0) {
        $(this).val($(this).attr('default'))
        $(this).attr('style', '');
      }
    })
  }

  // Post state drop-down
  var state_select_css = '.post-states select, .page-states select, .product-states select'
  var state_input_css = '#post_published_at_input, #page_published_at_input, #product_published_at_input'
  var state_hidden_css = '.post-hidden input, .page-hidden input, .product-hidden input'
  function update_state_select() {
    $(state_input_css).hide()
    switch(this.value) {
      case 'publish_now':
        $(state_hidden_css).val("published");
        break;
      case 'published_at':
        $(state_hidden_css).val("published");
        $(state_input_css).show();
        break;
      default:
        $(state_hidden_css).val(this.value);
        break;
    }
  }
  $(state_select_css).change(update_state_select);
  $(state_select_css).trigger('change'); // Make sure it shows correctly on load

  // Photo display types
  var photo_types = $(".photos-display-type input")
  if (photo_types.length) {
    photo_types.click(function() {
      // Removed selected class from parents then add to selected child input
      $(this).parent().removeClass('selected').children("input:checked").parent().addClass('selected')
    })
  }

  // Post address selector
  var post_address = $("input#post_address")
  var map_canvas = $("#map_canvas")
  if (typeof(google)!='undefined' && post_address.length && map_canvas.length && $.fn.autocomplete) {

    // Form elements
    var post_lat = $("input#post_lat");
    var post_long = $("input#post_long");
    var post_loc = $("input#post_loc");

    // Setup Gmap
    var latlng = new google.maps.LatLng((post_lat.length ? post_lat.val() : 30),(post_long.length ? post_long.val() : -45));
    var map = new google.maps.Map(map_canvas[0], {
      zoom: (post_lat.val().length ? 12 : 1),
      center: latlng,
      disableDefaultUI: true,
      mapTypeId: google.maps.MapTypeId.ROADMAP
    });

    //GEOCODER
    var geocoder = new google.maps.Geocoder();
    var marker = new google.maps.Marker({
      map: map,
      draggable: true
    });

    post_address.autocomplete({
      //This bit uses the geocoder to fetch address values
      source: function(request, response) {
        geocoder.geocode( {'address': request.term }, function(results, status) {
          response($.map(results, function(item) {
            var address_parts = $.grep(item.address_components, function(add) { return ['locality','country'].indexOf(add.types[0])!=-1 })
            var label = $.map(address_parts, function(part) { return part.long_name }).join(", ")
            return {
              label:  label,
              value: label,
              latitude: item.geometry.location.lat(),
              longitude: item.geometry.location.lng()
            }
          }));
        })
      },
      //This bit is executed upon selection of an address
      select: function(event, ui) {
        post_lat.val(ui.item.latitude);
        post_long.val(ui.item.longitude);
        post_loc.val(ui.item.value);
        var location = new google.maps.LatLng(ui.item.latitude, ui.item.longitude);
        marker.setPosition(location);
        map.setCenter(location);
        map.setZoom(12);
      }
    });
  }

  // Features select post. Eg: /admin/new/feature
  $(".photos-choose a").ajaxSuccess(function(e) {
    features = $("#feature_post_browser .archives a")
    if (features.length) {
      features.unbind('click')
      features.bind('click', function(e) {
        a = $(e.currentTarget)

        // Set hidden field to assoc post
        dom_id = a.parent().attr('id')
        match = dom_id.match(/\d+/)
        if (match.length) {
          post_id = match[0]
          $("input#feature_post_id").val(post_id)

          // Set title field
          title = a.find('span').html()
          title_field = $("input#feature_title")
          if (title_field.length && title_field.val().length==0) {
            title_field.val(title)
          }

          // Set URL field
          url = "http://"+window.location.host+"/posts/"+post_id+"/"+title.toLowerCase().replace(/\W+/g,'-')
          url_field = $("input#feature_url")
          if (url_field.length && url_field.val().length==0) {
            url_field.val(url)
          }

          // Insert new image
          photo_list = $("#feature_photo_ul")
          if (photo_list.length) {
            img_url = a.css('background-image').match(/http.*\?/)[0]
            img_url = img_url.replace(/thumb/, 'list')
            photo_list.html($("<li>").append($("<img>").attr('src', img_url)))
          }

        }
        // Prevent A link for launching
        return false;
      })
    }
  });
});

function fixRailsEmbeddedFormHashOrder(container) {
  // Fix up rails nested form hash ordering
  try {
    container.find('fieldset').each(function(i, el) {
      $(el).find(':input').each(function(j, inp) {
        new_name = String(inp.name).replace(/\[parts_attributes\]\[\d+\]/,'[parts_attributes]['+i+']')
        $(inp).attr('name', new_name)
      })
    })
  } catch (err) {
    console.log("Error: "+err.description)
    console.debug(err)
  }
}
