/*
 * Atreides - Admin Behaviours
 *
 * Lachlan Laycock @ Le 88
 * 22 Feb 2010
 *
 * DO NOT EDIT THIS FILE!
 * CHANGES TO THIS FILE WILL BE LOST!
 *
 * Use admin.js for location modifactions
 *
 */

$.token = function(){
 return $("meta[name='csrf-token']").attr("content");
}

$.removeDiacriticalMarks = function(string) {
  var dictionary = {"a":["\xaa","\xe0","\xe1","\xe2","\xe3","\xe4","\xe5","\u0101","\u0103","\u0105","\u01ce","\u0201","\u0203","\u0227","\u1d43","\u1e01","\u1e9a","\u1ea1","\u1ea3","\u2090","\uff41"],"A":["\xc0","\xc1","\xc2","\xc3","\xc4","\xc5","\u0100","\u0102","\u0104","\u01cd","\u0200","\u0202","\u0226","\u1d2c","\u1e00","\u1ea0","\u1ea2","\uff21"],"b":["\u1d47","\u1e03","\u1e05","\u1e07","\uff42"],"B":["\u1d2e","\u1e02","\u1e04","\u1e06","\uff22"],"c":["\xe7","\u0107","\u0109","\u010b","\u010d","\u1d9c","\u217d","\uff43"],"C":["\xc7","\u0106","\u0108","\u010a","\u010c","\u216d","\uff23"],"d":["\u010f","\u1d48","\u1e0b","\u1e0d","\u1e0f","\u1e11","\u1e13","\u217e","\uff44"],"D":["\u010e","\u1d30","\u1e0a","\u1e0c","\u1e0e","\u1e10","\u1e12","\u216e","\uff24"],"e":["\xe8","\xe9","\xea","\xeb","\u0113","\u0115","\u0117","\u0119","\u011b","\u0205","\u0207","\u0229","\u1d49","\u1e19","\u1e1b","\u1eb9","\u1ebb","\u1ebd","\u2091","\uff45"],"E":["\xc8","\xc9","\xca","\xcb","\u0112","\u0114","\u0116","\u0118","\u011a","\u0204","\u0206","\u0228","\u1d31","\u1e18","\u1e1a","\u1eb8","\u1eba","\u1ebc","\uff25"],"f":["\u1da0","\u1e1f","\uff46"],"F":["\u1e1e","\u2109","\uff26"],"g":["\u011d","\u011f","\u0121","\u0123","\u01e7","\u01f5","\u1d4d","\u1e21","\uff47"],"G":["\u011c","\u011e","\u0120","\u0122","\u01e6","\u01f4","\u1d33","\u1e20","\uff27"],"h":["\u0125","\u021f","\u02b0","\u1e23","\u1e25","\u1e27","\u1e29","\u1e2b","\u1e96","\u210e","\uff48"],"H":["\u0124","\u021e","\u1d34","\u1e22","\u1e24","\u1e26","\u1e28","\u1e2a","\uff28"],"i":["\xec","\xed","\xee","\xef","\u0129","\u012b","\u012d","\u012f","\u01d0","\u0209","\u020b","\u1d62","\u1e2d","\u1ec9","\u1ecb","\u2071","\uff49"],"I":["\xcc","\xcd","\xce","\xcf","\u0128","\u012a","\u012c","\u012e","\u0130","\u01cf","\u0208","\u020a","\u1d35","\u1e2c","\u1ec8","\u1eca","\uff29"],"j":["\u0135","\u01f0","\u02b2","\uff4a"],"J":["\u0134","\u1d36","\uff2a"],"k":["\u0137","\u01e9","\u1d4f","\u1e31","\u1e33","\u1e35","\uff4b"],"K":["\u0136","\u01e8","\u1d37","\u1e30","\u1e32","\u1e34","\u212a","\uff2b"],"l":["\u013a","\u013c","\u013e","\u02e1","\u0140","\u1e37","\u1e3b","\u1e3d","\u217c","\uff4c"],"L":["\u0139","\u013b","\u013d","\u1d38","\u1e36","\u1e3a","\u1e3c","\u216c","\uff2c"],"m":["\u1d50","\u1e3f","\u1e41","\u1e43","\u217f","\uff4d"],"M":["\u1d39","\u1e3e","\u1e40","\u1e42","\u216f","\uff2d"],"n":["\xf1","\u0144","\u0146","\u0148","\u0149","\u1e45","\u1e47","\u1e49","\u1e4b","\uff4e"],"N":["\xd1","\u0143","\u0145","\u0147","\u1d3a","\u1e44","\u1e46","\u1e48","\u1e4a","\uff2e"],"o":["\xba","\xf2","\xf3","\xf4","\xf5","\xf6","\u014d","\u014f","\u0151","\u01d2","\u01eb","\u020d","\u020f","\u022f","\u1d52","\u1ecd","\u1ecf","\uff4f"],"O":["\xd2","\xd3","\xd4","\xd6","\xd5","\u014c","\u014e","\u0150","\u01d1","\u01ea","\u020c","\u020e","\u022e","\u1d3c","\u1ecc","\u1ece","\uff2f"],"p":["\u1d56","\u1e55","\u1e57","\uff50"],"P":["\u1d3e","\u1e54","\u1e56","\uff30"],"q":["\uff51"],"Q":["\uff31"],"r":["\u0155","\u0157","\u0159","\u0211","\u0213","\u02b3","\u1d63","\u1e59","\u1e5a","\u1e5b","\u1e5f","\uff52"],"R":["\u0154","\u0156","\u0158","\u0210","\u0212","\u1d3f","\u1e58","\u1e5e","\uff32"],"s":["\u015b","\u015d","\u015f","\u0161","\u0219","\u1e61","\u1e63","\uff53"],"S":["\u015a","\u015c","\u015e","\u0160","\u0218","\u1e60","\u1e62","\uff33"],"t":["\u0163","\u0165","\u021b","\u1d57","\u1e6b","\u1e6d","\u1e6f","\u1e71","\u1e97","\uff54"],"T":["\u0162","\u0164","\u021a","\u1d40","\u1e6a","\u1e6c","\u1e6e","\u1e70","\uff34"],"u":["\xf9","\xfa","\xfb","\xfc","\u0169","\u016b","\u016d","\u016f","\u0171","\u01b0","\u01d4","\u0215","\u0217","\u1d58","\u1d64","\u1e73","\u1e75","\u1e77","\u1ee5","\u1ee7","\uff55"],"U":["\xd9","\xda","\xdc","\xdb","\u0168","\u016a","\u016c","\u016e","\u0170","\u0172","\u01af","\u01d3","\u0214","\u0216","\u1d41","\u1e72","\u1e74","\u1e76","\u1ee4","\u1ee6","\uff35"],"v":["\u1e7d","\u1e7f","\u1d5b","\u1d65","\uff56"],"V":["\u1e7c","\u1e7e","\u2c7d","\uff36"],"w":["\u0175","\u02b7","\u1e81","\u1e83","\u1e85","\u1e87","\u1e89","\u1e98","\uff57"],"W":["\u0174","\u1d42","\u1e80","\u1e82","\u1e84","\u1e86","\u1e88","\uff37"],"x":["\u02e3","\u1e8b","\u1e8d","\u2093","\uff58"],"X":["\u1e8a","\u1e8c","\uff38"],"y":["\xfd","\xff","\u0177","\u0233","\u02b8","\u1e8f","\u1e99","\u1ef3","\u1ef5","\u1ef7","\u1ef9","\uff59"],"Y":["\xdd","\u0176","\u0178","\u0232","\u1e8e","\u1ef2","\u1ef4","\u1ef6","\u1ef8","\uff39"],"z":["\u017a","\u017c","\u017e","\u1e91","\u1e93","\u1e95","\uff5a"],"Z":["\u0179","\u017b","\u017d","\u1e90","\u1e92","\u1e94","\uff3a"]},
  map = {}, chars, char, pattern = "", i, l;
  for (char in dictionary) {
      chars = dictionary[char];
      for (i=0,l=chars.length; i<l; i++) {
          map[chars[i]] = char;
          pattern += chars[i];
      }
  }
  pattern = new RegExp( "[" + pattern + "]", 'gi');
  return string ? string.replace(pattern, function(char){
      return char in map ? map[char] : char;
  }) : string;
}

jQuery.fn.bindAll = function(options) {
  var $this = this;
  jQuery.each(options, function(key, val){
    $this.bind(key, val);
  });
  return this;
}

var pageChanged = false;

function hasPageChanged(){
  return pageChanged;
};

$(window).bind("beforeunload", function(){
  if(hasPageChanged()){
    return "You have unsaved changes on this page."
  }
});

$(document).ready(function() {

  $("input, textarea").not("input[name*='search'], input[name*='query']").bind("change", function(){
    pageChanged = true;
  });

  $("form").submit(function(){
    pageChanged = false;
    return true;
  });

  // Hide flash messages
  $("#flash").delay(2000).fadeOut('slow');

  var links = $('a')
  if (links.length) {
    links.click(function(e) {
      $(this).addClass('loading')
    })

    // Remove loading class to all links when AJAX finished - use CSS to style
    links.ajaxComplete(function(e) {
      $(this).removeClass('loading');
    })

    // Make external links open in new window
    reg = new RegExp("//"+window.location.host+"/");
    links.each(function(i, el) {
      if (!el.href.match(reg)) {
        var el = $(el);
        if (!el.attr('target')) {
          el.attr('target', '_blank')
        }
      }
    })
  }

  // Add behaviour to support attributes of data-submit. Must be using jquery-ujs as well.
  $('a[data-submit]').live('ajax:before', function(event) {
    submit_fields = $($(this).data('submit'))
    $(this).data('params', submit_fields.serialize())
  })

  // Date pickers
  if ((date_pickers = $(".date-picker input")).length) {
    date_pickers.datepicker({ dateFormat: 'dd/mm/yy' });
  }

  // Tag inputs
  if ((tag_textareas = $('.tag-picker textarea')).length) {
    tag_textareas.tags();
  }

  // Auto-hide fields
  auto_hides = $('.auto-hide-text input')
  if (auto_hides.length) {
    auto_hides.each(function(i, el) { $(el).attr('default',$(el).val()) })
    auto_hides.focus(function(e) {
      if ($(this).val()==$(this).attr('default')) $(this).val('')
      $(this).attr('style', 'color:#000');
    })
    auto_hides.blur(function(e) {
      if ($(this).val().length==0) {
        $(this).val($(this).attr('default'))
        $(this).attr('style', '');
      }
    })
  }

  // Post state drop-down
  var stateSelect = 'select.publish-input',
      stateInput = 'input.state-input',
      dateInput = '.date-input'
  function update_state_select() {

    $(dateInput).hide()
    switch(this.value) {
      case 'publish_now':
        $(stateInput).val("published");
        break;
      case 'published_at':
        $(stateInput).val("published");
        $(dateInput).show();
        break;
      default:
        $(stateInput).val(this.value);
        break;
    }
  }
  $(stateSelect).on("change", update_state_select);
  $(stateSelect).trigger('change'); // Make sure it shows correctly on load

  // Photo display types
  var photo_types = $(".photos-display-type input")
  if (photo_types.length) {
    photo_types.click(function() {
      // Removed selected class from parents then add to selected child input
      $(this).parent().removeClass('selected').children("input:checked").parent().addClass('selected')
    })
  }

  // Post address selector
  var post_address = $("input#post_address")
  var map_canvas = $("#map_canvas")
  if (typeof(google)!='undefined' && post_address.length && map_canvas.length && $.fn.autocomplete) {

    // Form elements
    var post_lat = $("input#post_lat");
    var post_long = $("input#post_long");
    var post_loc = $("input#post_loc");

    // Setup Gmap
    var latlng = new google.maps.LatLng((post_lat.length ? post_lat.val() : 30),(post_long.length ? post_long.val() : -45));
    var map = new google.maps.Map(map_canvas[0], {
      zoom: (post_lat.val().length ? 12 : 1),
      center: latlng,
      disableDefaultUI: true,
      mapTypeId: google.maps.MapTypeId.ROADMAP
    });

    //GEOCODER
    var geocoder = new google.maps.Geocoder();
    var marker = new google.maps.Marker({
      map: map,
      draggable: true
    });

    post_address.autocomplete({
      //This bit uses the geocoder to fetch address values
      source: function(request, response) {
        geocoder.geocode( {'address': request.term }, function(results, status) {
          response($.map(results, function(item) {
            var address_parts = $.grep(item.address_components, function(add) { return ['locality','country'].indexOf(add.types[0])!=-1 })
            var label = $.map(address_parts, function(part) { return part.long_name }).join(", ")
            return {
              label:  label,
              value: label,
              latitude: item.geometry.location.lat(),
              longitude: item.geometry.location.lng()
            }
          }));
        })
      },
      //This bit is executed upon selection of an address
      select: function(event, ui) {
        post_lat.val(ui.item.latitude);
        post_long.val(ui.item.longitude);
        post_loc.val(ui.item.value);
        var location = new google.maps.LatLng(ui.item.latitude, ui.item.longitude);
        marker.setPosition(location);
        map.setCenter(location);
        map.setZoom(12);
      }
    });
  }

  // Features select post. Eg: /admin/new/feature
  $(".photos-choose a").ajaxSuccess(function(e) {
    features = $("#feature_post_browser .archives a")
    if (features.length) {
      features.unbind('click')
      features.bind('click', function(e) {
        a = $(e.currentTarget)

        // Set hidden field to assoc post
        dom_id = a.parent().attr('id')
        match = dom_id.match(/\d+/)
        if (match.length) {
          post_id = match[0]
          $("input#feature_post_id").val(post_id)

          // Set title field
          title = a.find('span').html()
          title_field = $("input#feature_title")
          if (title_field.length && title_field.val().length==0) {
            title_field.val(title)
          }

          // Set URL field
          url = "http://"+window.location.host+"/posts/"+post_id+"/"+title.toLowerCase().replace(/\W+/g,'-')
          url_field = $("input#feature_url")
          if (url_field.length && url_field.val().length==0) {
            url_field.val(url)
          }

          // Insert new image
          photo_list = $("#feature_photo_ul")
          if (photo_list.length) {
            img_url = a.css('background-image').match(/http.*\?/)[0]
            img_url = img_url.replace(/thumb/, 'list')
            photo_list.html($("<li>").append($("<img>").attr('src', img_url)))
          }

        }
        // Prevent A link for launching
        return false;
      })
    }
  });
});

function fixRailsEmbeddedFormHashOrder(container) {
  // Fix up rails nested form hash ordering
  try {
    container.find('fieldset').each(function(i, el) {
      $(el).find(':input').each(function(j, inp) {
        new_name = String(inp.name).replace(/\[parts_attributes\]\[\d+\]/,'[parts_attributes]['+i+']')
        $(inp).attr('name', new_name)
      })
    })
  } catch (err) {
    console.log("Error: "+err.description)
    console.debug(err)
  }
}
